---
- include: generic-install.yml
  when: not is_atomic and not ansible_distribution == "CentOS"

- include: centos.yml
  when: not is_atomic and ansible_distribution == "CentOS"

- name: write the config file for the api server
  template: src=apiserver.j2 dest=/etc/kubernetes/apiserver
  notify:
    - restart apiserver

- name: write the config file for the controller-manager
  copy: src=controller-manager dest=/etc/kubernetes/controller-manager
  notify:
    - restart controller-manager

- name: write the config file for the scheduler
  copy: src=scheduler dest=/etc/kubernetes/scheduler
  notify:
    - restart scheduler

- name: add cap_net_bind_service to kube-apiserver
  capabilities: path=/usr/bin/kube-apiserver capability=cap_net_bind_service=ep state=present

- name: Create system kube-cert groups
  group: name={{ kube_cert_group }} state=present system=yes

- name: Create kubernetes script directory
  file: path={{ kube_script_dir }} state=directory

- name: Create kubernetes config directory
  file: path={{ kube_config_dir }} state=directory

- name: Copy certificates to master
  copy:
    src={{ item }}
    dest={{ kube_config_dir }}
    group={{ kube_cert_group }}
  with_items:
    - "{{ _local_cert_dir }}/ca.crt"
    - "{{ _local_cert_dir }}/server.cert"
    - "{{ _local_cert_dir }}/server.key"
    - "{{ _local_cert_dir }}/kubecfg.crt"
    - "{{ _local_cert_dir }}/kubecfg.key"
  tags:
    certs

- name: Enable apiserver
  service: name=kube-apiserver enabled=yes state=started

- name: Enable controller-manager
  service: name=kube-controller-manager enabled=yes state=started

- name: Enable scheduler
  service: name=kube-scheduler enabled=yes state=started

- include: firewalld.yml
  when: has_firewalld

- include: iptables.yml
  when: not has_firewalld and has_iptables

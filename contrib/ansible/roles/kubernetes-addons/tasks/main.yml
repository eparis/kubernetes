---
- name: Assures /etc/kubernetes/addons/ dir exists
  file: path=/etc/kubernetes/addons/ state=directory

- include: generic-install.yml
  when: not is_atomic

- name: Assures local addon dir exists
  local_action: file
    path={{ local_temp_addon_dir }}
    state=directory
  sudo: no

- name: Get kube-addons script from Kubernetes
  get_url:
    url=https://raw.githubusercontent.com/GoogleCloudPlatform/kubernetes/master/cluster/saltbase/salt/kube-addons/kube-addons.sh
    dest={{ kube_script_dir }}/kube-addons.sh mode=0755
    force=yes
  notify:
    - reload and restart kube-addons

- name: Get kube-addon-update script from Kubernetes
  get_url:
    url=https://raw.githubusercontent.com/GoogleCloudPlatform/kubernetes/master/cluster/saltbase/salt/kube-addons/kube-addon-update.sh
    dest={{ kube_script_dir }}/kube-addon-update.sh mode=0755
    force=yes
  notify:
    - reload and restart kube-addons

- name: Copy script to create known_tokens.csv
  copy: src=kube-gen-known-tokens.sh dest={{ kube_script_dir }}/kube-gen-known-tokens.sh mode=0755

- name: Run kube-gen-known-tokens script to create {{ kube_config_dir }}/known_tokens.csv
  command: "{{ kube_script_dir }}/kube-gen-known-tokens.sh"
  args:
    creates: "{{ kube_config_dir }}/known_tokens.csv"
  environment:
    TOKEN_DIR: "{{ kube_config_dir }}"

- name: Install kube-addons service
  template: src=kube-addons.service.j2 dest=/etc/systemd/system/kube-addons.service
  notify:
    - reload and restart kube-addons

- name: Enable and start kube addons
  service: name=kube-addons.service enabled=yes state=started
